{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\754638\\\\Desktop\\\\QR_Code_Scanner\\\\qr-code\\\\src\\\\Login.js\";\nimport React, { Component } from 'react';\nimport UserStore from './UserStore';\nimport { observer } from 'mobx-react';\nexport class Login extends Component {\n  async componentDidMount() {\n    try {\n      let res = await fetch('/isLoggedIn', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'applicatoin/json'\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.Loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else {\n        UserStore.Loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.Loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLoout() {\n    try {\n      let res = await fetch('/logout', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'applicatoin/json'\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.username = '';\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    if (UserStore.Loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this);\n    } else {\n      if (UserStore.isLoggedIn) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"welcome \", UserStore.username, /*#__PURE__*/_jsxDEV(\"button\", {\n            text: 'logout',\n            disabled: false,\n            onClick: () => this.doLoout()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Login from\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}\nexport default Login;","map":{"version":3,"sources":["C:/Users/754638/Desktop/QR_Code_Scanner/qr-code/src/Login.js"],"names":["React","Component","UserStore","observer","Login","componentDidMount","res","fetch","method","headers","result","json","success","Loading","isLoggedIn","username","e","doLoout","console","log","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,OAAO,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAEjC,QAAMI,iBAAN,GAA0B;AAEtB,QAAI;AACA,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,aAAD,EAAe;AAChCC,QAAAA,MAAM,EAAE,MADwB;AAEhCC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX;AAFuB,OAAf,CAArB;AAOA,UAAIC,MAAM,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;;AACA,UAAID,MAAM,IAAIA,MAAM,CAACE,OAArB,EAA8B;AAC1BV,QAAAA,SAAS,CAACW,OAAV,GAAoB,KAApB;AACAX,QAAAA,SAAS,CAACY,UAAV,GAAuB,IAAvB;AACAZ,QAAAA,SAAS,CAACa,QAAV,GAAqBL,MAAM,CAACK,QAA5B;AACH,OAJD,MAIO;AACHb,QAAAA,SAAS,CAACW,OAAV,GAAoB,KAApB;AACAX,QAAAA,SAAS,CAACY,UAAV,GAAuB,KAAvB;AACH;AACJ,KAjBD,CAiBE,OAAOE,CAAP,EAAU;AACRd,MAAAA,SAAS,CAACW,OAAV,GAAoB,KAApB;AACAX,MAAAA,SAAS,CAACY,UAAV,GAAuB,KAAvB;AACH;AACJ;;AACD,QAAMG,OAAN,GAAgB;AAEZ,QAAI;AACA,UAAIX,GAAG,GAAG,MAAMC,KAAK,CAAC,SAAD,EAAW;AAC5BC,QAAAA,MAAM,EAAE,MADoB;AAE5BC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX;AAFmB,OAAX,CAArB;AAOA,UAAIC,MAAM,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;;AACA,UAAID,MAAM,IAAIA,MAAM,CAACE,OAArB,EAA8B;AAC1BV,QAAAA,SAAS,CAACY,UAAV,GAAuB,KAAvB;AACAZ,QAAAA,SAAS,CAACa,QAAV,GAAqB,EAArB;AACH;AACJ,KAbD,CAaE,OAAOC,CAAP,EAAU;AACRE,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACH;AACJ;;AAEDI,EAAAA,MAAM,GAAG;AACL,QAAGlB,SAAS,CAACW,OAAb,EAAsB;AAClB,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KAND,MAMO;AACH,UAAIX,SAAS,CAACY,UAAd,EAA0B;AACtB,4BACI;AAAA,iCACaZ,SAAS,CAACa,QADvB,eAEI;AAAQ,YAAA,IAAI,EAAE,QAAd;AAAwB,YAAA,QAAQ,EAAE,KAAlC;AAAyC,YAAA,OAAO,EAAE,MAAM,KAAKE,OAAL;AAAxD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAMH;;AACL,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAKC;AACJ;;AApEgC;AAuErC,eAAeb,KAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport UserStore from './UserStore'\r\nimport { observer } from 'mobx-react'\r\n\r\nexport class Login extends Component {\r\n\r\n    async componentDidMount() {\r\n\r\n        try {\r\n            let res = await fetch('/isLoggedIn',{\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'applicatoin/json'\r\n                }\r\n            })\r\n            let result = await res.json(); \r\n            if (result && result.success) {\r\n                UserStore.Loading = false\r\n                UserStore.isLoggedIn = true\r\n                UserStore.username = result.username\r\n            } else {\r\n                UserStore.Loading = false \r\n                UserStore.isLoggedIn = false \r\n            }\r\n        } catch (e) {\r\n            UserStore.Loading = false\r\n            UserStore.isLoggedIn = false \r\n        }\r\n    }\r\n    async doLoout() {\r\n\r\n        try {\r\n            let res = await fetch('/logout',{\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'applicatoin/json'\r\n                }\r\n            })\r\n            let result = await res.json(); \r\n            if (result && result.success) {\r\n                UserStore.isLoggedIn = false\r\n                UserStore.username = ''\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(UserStore.Loading) {\r\n            return(\r\n                <div>\r\n                    Loading ...\r\n                </div>\r\n            )\r\n        } else { \r\n            if (UserStore.isLoggedIn) {\r\n                return(\r\n                    <div>\r\n                        welcome {UserStore.username} \r\n                        <button text={'logout'} disabled={false} onClick={() => this.doLoout()}/>\r\n                    </div>\r\n                )\r\n            }\r\n        return (\r\n            <div>\r\n                Login from\r\n            </div>\r\n        )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}