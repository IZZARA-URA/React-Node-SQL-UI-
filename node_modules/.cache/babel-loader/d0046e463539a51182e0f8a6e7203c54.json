{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\754638\\\\Desktop\\\\QR_Code_Scanner\\\\qr-code\\\\src\\\\Login.js\";\nimport React, { Component } from 'react';\nimport UserStore from './UserStore';\nexport class Login extends Component {\n  async componentDidMount() {\n    try {\n      let res = await fetch('/isLoggedIn', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'applicatoin/json'\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.Loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else {\n        UserStore.Loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.Loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLoout() {\n    try {\n      let res = await fetch('/logout', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'applicatoin/json'\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.username = '';\n      }\n    } catch (e) {\n      UserStore.Loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Login;","map":{"version":3,"sources":["C:/Users/754638/Desktop/QR_Code_Scanner/qr-code/src/Login.js"],"names":["React","Component","UserStore","Login","componentDidMount","res","fetch","method","headers","result","json","success","Loading","isLoggedIn","username","e","doLoout","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAO,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAEjC,QAAMG,iBAAN,GAA0B;AAEtB,QAAI;AACA,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,aAAD,EAAe;AAChCC,QAAAA,MAAM,EAAE,MADwB;AAEhCC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX;AAFuB,OAAf,CAArB;AAOA,UAAIC,MAAM,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;;AACA,UAAID,MAAM,IAAIA,MAAM,CAACE,OAArB,EAA8B;AAC1BT,QAAAA,SAAS,CAACU,OAAV,GAAoB,KAApB;AACAV,QAAAA,SAAS,CAACW,UAAV,GAAuB,IAAvB;AACAX,QAAAA,SAAS,CAACY,QAAV,GAAqBL,MAAM,CAACK,QAA5B;AACH,OAJD,MAIO;AACHZ,QAAAA,SAAS,CAACU,OAAV,GAAoB,KAApB;AACAV,QAAAA,SAAS,CAACW,UAAV,GAAuB,KAAvB;AACH;AACJ,KAjBD,CAiBE,OAAOE,CAAP,EAAU;AACRb,MAAAA,SAAS,CAACU,OAAV,GAAoB,KAApB;AACAV,MAAAA,SAAS,CAACW,UAAV,GAAuB,KAAvB;AACH;AACJ;;AACD,QAAMG,OAAN,GAAgB;AAEZ,QAAI;AACA,UAAIX,GAAG,GAAG,MAAMC,KAAK,CAAC,SAAD,EAAW;AAC5BC,QAAAA,MAAM,EAAE,MADoB;AAE5BC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX;AAFmB,OAAX,CAArB;AAOA,UAAIC,MAAM,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;;AACA,UAAID,MAAM,IAAIA,MAAM,CAACE,OAArB,EAA8B;AAC1BT,QAAAA,SAAS,CAACW,UAAV,GAAuB,KAAvB;AACAX,QAAAA,SAAS,CAACY,QAAV,GAAqB,EAArB;AACH;AACJ,KAbD,CAaE,OAAOC,CAAP,EAAU;AACRb,MAAAA,SAAS,CAACU,OAAV,GAAoB,KAApB;AACAV,MAAAA,SAAS,CAACW,UAAV,GAAuB,KAAvB;AACH;AACJ;;AAEDI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AArDgC;AAwDrC,eAAed,KAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport UserStore from './UserStore'\r\n\r\nexport class Login extends Component {\r\n\r\n    async componentDidMount() {\r\n\r\n        try {\r\n            let res = await fetch('/isLoggedIn',{\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'applicatoin/json'\r\n                }\r\n            })\r\n            let result = await res.json(); \r\n            if (result && result.success) {\r\n                UserStore.Loading = false\r\n                UserStore.isLoggedIn = true\r\n                UserStore.username = result.username\r\n            } else {\r\n                UserStore.Loading = false \r\n                UserStore.isLoggedIn = false \r\n            }\r\n        } catch (e) {\r\n            UserStore.Loading = false\r\n            UserStore.isLoggedIn = false \r\n        }\r\n    }\r\n    async doLoout() {\r\n\r\n        try {\r\n            let res = await fetch('/logout',{\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'applicatoin/json'\r\n                }\r\n            })\r\n            let result = await res.json(); \r\n            if (result && result.success) {\r\n                UserStore.isLoggedIn = false\r\n                UserStore.username = ''\r\n            }\r\n        } catch (e) {\r\n            UserStore.Loading = false\r\n            UserStore.isLoggedIn = false \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Login\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}