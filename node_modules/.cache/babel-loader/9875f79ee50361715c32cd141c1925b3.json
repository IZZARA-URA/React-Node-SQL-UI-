{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\754638\\\\Desktop\\\\QR_Code_Scanner\\\\qr-code\\\\src\\\\Component\\\\Dashboard\\\\SModal\\\\Modal\\\\ReactScannerB.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport QrReader from 'react-qr-scanner';\nimport Button from '@material-ui/core/Button';\nimport Axios from 'axios';\nimport { Form } from 'react-bootstrap';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  rootBtn: {\n    '& > *': {\n      margin: theme.spacing(0.1)\n    },\n    display: 'flex'\n  }\n}));\n\nfunction ReactScannarB() {\n  _s();\n\n  const [result, setResult] = useState('No result');\n  const [values, setValues] = useState('1');\n  const [delay, setDelay] = useState(5000);\n  const classes = useStyles();\n\n  const ToStore = e => {\n    Axios.put('http://localhost:3001/api/updateToStore', {\n      result: result,\n      values: values\n    }).then(() => {\n      console.log('to store');\n    }).then(() => {\n      setResult('OK!'); //console.log(result)\n    }).then(window.location.reload(false));\n  };\n\n  function IsScann() {\n    const pushResult = [''];\n\n    if (result != null && result !== undefined) {\n      pushResult.push(result);\n      console.log(pushResult[1]);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"PART CODE : \", pushResult[1]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.rootBtn,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: 4,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  size: \"md\",\n                  placeholder: \"Values\",\n                  onChange: e => setValues(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: 4,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"Primary\",\n              onClick: ToStore,\n              children: \" To Store \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(QrReader, {\n      delay: delay,\n      onError: err => console.log(err),\n      onScan: data => setResult(data),\n      style: {\n        width: '100%',\n        height: '200px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      styles: {\n        display: 'flex'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", IsScann(result), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ReactScannarB, \"syjk9UP4LMpWWMEuMFDDqDXFfww=\", false, function () {\n  return [useStyles];\n});\n\n_c = ReactScannarB;\nexport default ReactScannarB;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactScannarB\");","map":{"version":3,"sources":["C:/Users/754638/Desktop/QR_Code_Scanner/qr-code/src/Component/Dashboard/SModal/Modal/ReactScannerB.js"],"names":["React","useState","QrReader","Button","Axios","Form","Grid","makeStyles","useStyles","theme","rootBtn","margin","spacing","display","ReactScannarB","result","setResult","values","setValues","delay","setDelay","classes","ToStore","e","put","then","console","log","window","location","reload","IsScann","pushResult","undefined","push","target","value","err","data","width","height"],"mappings":"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","sourcesContent":["import React , { useState } from 'react'\r\nimport QrReader from 'react-qr-scanner'\r\nimport Button from '@material-ui/core/Button';\r\nimport Axios from 'axios'\r\nimport { Form } from 'react-bootstrap';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    rootBtn: {\r\n      '& > *': {\r\n        margin: theme.spacing(0.1),\r\n      },display: 'flex'\r\n    },\r\n  }));\r\n  \r\nfunction ReactScannarB() {\r\n    const [result, setResult] = useState('No result')\r\n    const [values, setValues] = useState('1')\r\n    const [delay, setDelay] = useState(5000)\r\n    const classes = useStyles();\r\n\r\n    const ToStore = (e) => {\r\n        Axios.put('http://localhost:3001/api/updateToStore', {\r\n          result: result,\r\n          values: values,\r\n         }).then(() => {\r\n           console.log('to store')\r\n         }).then(() => {\r\n           setResult('OK!')\r\n         //console.log(result)\r\n         }).then(window.location.reload(false))\r\n    }\r\n\r\n    function IsScann () {\r\n      const pushResult = [''] \r\n      if  ( result != null && result !== undefined){\r\n        pushResult.push(result)\r\n        console.log(pushResult[1])\r\n      }\r\n        return (\r\n        <div>\r\n          <Grid item={12}>\r\n            <h4>PART CODE : {pushResult[1]}</h4>\r\n            <div className={classes.rootBtn}>\r\n                <Grid item={4}>\r\n                    <Form > \r\n                        <Form.Group>\r\n                            <Form.Control type=\"number\" size=\"md\" placeholder=\"Values\" onChange={(e) => setValues(e.target.value)}/>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Grid>\r\n                <Grid item={4}>\r\n                    <Button  variant=\"contained\" color=\"Primary\" onClick={ToStore}> To Store </Button>\r\n                </Grid>\r\n            </div>\r\n          </Grid>\r\n        </div>\r\n      )}\r\n    \r\n    return (\r\n      <div >\r\n        <QrReader\r\n            delay={delay}\r\n            onError={err => console.log(err)}\r\n            onScan={(data) => setResult(data)}\r\n            style={{ width: '100%', height: '200px' }}/>\r\n        <div styles={{display: 'flex'}}>\r\n            <p> {IsScann(result)} </p>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ReactScannarB\r\n"]},"metadata":{},"sourceType":"module"}