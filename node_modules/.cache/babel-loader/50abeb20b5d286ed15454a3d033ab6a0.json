{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\754638\\\\Desktop\\\\QR_Code_Scanner\\\\qr-code\\\\src\\\\Component\\\\PageDashboard\\\\ReactQrCodeScanner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //import BarcodeScannerComponent from \"react-webcam-barcode-scanner\";\n//import BarcodeReader from 'react-barcode-reader'\n\nimport QrReader from 'react-qr-scanner';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  root1: {\n    textAlign: 'center'\n  },\n  root2: {},\n  p: {}\n}));\n\nfunction ReactQrCodeScanner() {\n  _s();\n\n  const classes = useStyles();\n  const [result, setResult] = useState('Not Found');\n\n  const UpdatStore = e => {\n    Axios.put('http://localhost:3001/api/updateStoreAdd', {\n      result: result\n    }).then(() => {\n      console.log('withdraw'); //console.log(REASULT)\n    }).then(() => {\n      setResult('Withdraw OK!'); //console.log(result)\n    });\n  };\n\n  const ToStore = e => {\n    Axios.put('http://localhost:3001/api/updateToStore', {\n      result: result\n    }).then(() => {\n      console.log('to store');\n    }).then(() => {\n      setResult('OK!'); //console.log(result)\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.root,\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root1,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '0px',\n              marginLeft: '0px'\n            },\n            children: /*#__PURE__*/_jsxDEV(QrReader, {\n              delay: 300,\n              onError: err => console.log(err),\n              onScan: data => setResult(data),\n              style: {\n                width: '100%',\n                height: '200px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.p,\n            children: result\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"Primary\",\n            onClick: UpdatStore,\n            children: \" Withdraw \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"Primary\",\n            onClick: ToStore,\n            children: \" To Store  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ReactQrCodeScanner, \"e0pV14792ozBunYudDHmAUQ0wro=\", false, function () {\n  return [useStyles];\n});\n\n_c = ReactQrCodeScanner;\nexport default ReactQrCodeScanner; //<Button fullWidth variant=\"contained\" color=\"Primary\" onClick={OutStore}>Out</Button>\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactQrCodeScanner\");","map":{"version":3,"sources":["C:/Users/754638/Desktop/QR_Code_Scanner/qr-code/src/Component/PageDashboard/ReactQrCodeScanner.js"],"names":["React","useState","QrReader","Grid","Button","makeStyles","Axios","useStyles","theme","root","display","root1","textAlign","root2","p","ReactQrCodeScanner","classes","result","setResult","UpdatStore","e","put","then","console","log","ToStore","marginTop","marginLeft","err","data","width","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n//import BarcodeScannerComponent from \"react-webcam-barcode-scanner\";\r\n//import BarcodeReader from 'react-barcode-reader'\r\nimport QrReader from 'react-qr-scanner'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Axios from 'axios'\r\n \r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex'\r\n    },  \r\n    root1: {\r\n      textAlign: 'center'\r\n    },\r\n    root2: {\r\n        \r\n    },\r\n    p:{\r\n        \r\n    }\r\n}))\r\n\r\nfunction ReactQrCodeScanner() {\r\n  const classes = useStyles();\r\n\r\n  const [ result, setResult ] = useState('Not Found')\r\n \r\n    const UpdatStore = (e) => {\r\n      Axios.put('http://localhost:3001/api/updateStoreAdd', {\r\n        result:result,\r\n      }).then(() => {\r\n        console.log('withdraw')\r\n        //console.log(REASULT)\r\n      }).then(() => {\r\n        setResult('Withdraw OK!')\r\n        //console.log(result)\r\n      })\r\n    }\r\n    \r\n     const ToStore = (e) => {\r\n       Axios.put('http://localhost:3001/api/updateToStore', {\r\n         result:result,\r\n        }).then(() => {\r\n          console.log('to store')\r\n        }).then(() => {\r\n          setResult('OK!')\r\n          //console.log(result)\r\n        })\r\n      }\r\n      \r\n    \r\n  \r\n  return (\r\n    <Grid container >\r\n      <Grid className={classes.root} item xs={12}>\r\n        <Grid item xs={8} ></Grid>\r\n        <Grid item xs={4}>\r\n          <div className={classes.root1}>\r\n            <div style={{marginTop: '0px',marginLeft:'0px'}}>\r\n              <QrReader\r\n                  delay={300}\r\n                  onError={err => console.log(err)}\r\n                  onScan={(data) => setResult(data)}\r\n                  style={{ width: '100%', height: '200px' }}\r\n              />\r\n            </div>\r\n              <p className={classes.p}>{result}</p>\r\n              \r\n              <Button  variant=\"contained\" color=\"Primary\" onClick={UpdatStore}> Withdraw </Button>\r\n              <br/>\r\n              <br/>\r\n              <Button  variant=\"contained\" color=\"Primary\" onClick={ToStore}> To Store  </Button>\r\n                \r\n\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n \r\nexport default ReactQrCodeScanner;\r\n\r\n//<Button fullWidth variant=\"contained\" color=\"Primary\" onClick={OutStore}>Out</Button>"]},"metadata":{},"sourceType":"module"}