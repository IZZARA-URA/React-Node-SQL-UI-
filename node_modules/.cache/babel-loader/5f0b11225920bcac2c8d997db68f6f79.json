{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\754638\\\\Desktop\\\\QR_Code_Scanner\\\\qr-code\\\\src\\\\Component\\\\Dashboard\\\\SModal\\\\Modal\\\\ReactScannarA.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport QrReader from 'react-qr-scanner';\nimport Button from '@material-ui/core/Button';\nimport Axios from 'axios';\nimport { Form } from 'react-bootstrap';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  rootBtn: {\n    '& > *': {\n      margin: theme.spacing(0.1)\n    },\n    display: 'flex'\n  }\n}));\n\nfunction ReactScannarA() {\n  _s();\n\n  const [result, setResult] = useState('No result');\n  const [values, setValues] = useState('1');\n  const classes = useStyles();\n\n  const UpdatStore = e => {\n    Axios.put('http://localhost:3001/api/updateStoreAdd', {\n      result: result,\n      values: values\n    }).then(() => {\n      console.log('withdraw');\n    }).then(() => {\n      setResult('Withdraw OK!'); //console.log(result)\n    });\n  };\n\n  if (result === 'No result') {//console.log('No result 1')\n    //console.log(result)\n  } else {\n    //setResult(e.target.value)\n    alert(result); //console.log(result)\n  }\n\n  function IsScann(data) {\n    if (result === 'No result') {\n      //IsScann == false\n      console.log(result);\n    } else {\n      setResult(data);\n      console.log(result);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(QrReader, {\n      delay: 1000,\n      onError: err => console.log(err),\n      onScan: IsScann,\n      style: {\n        width: '100%',\n        height: '200px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      styles: {\n        display: 'flex'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ReactScannarA, \"vrdjhP31oj5k4+dfyhYVRmSnfks=\", false, function () {\n  return [useStyles];\n});\n\n_c = ReactScannarA;\nexport default ReactScannarA;\n/**\r\n <Grid item={12}>\r\n                    <div className={classes.rootBtn}>\r\n                        <Grid item={4}>\r\n                            <Form > \r\n                                <Form.Group>\r\n                                    <Form.Control type=\"number\" size=\"md\" placeholder=\"Values\" onChange={(e) => setValues(e.target.value)}/>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Grid>\r\n                        <Grid item={4}>\r\n                            <Button  variant=\"contained\" color=\"Primary\" onClick={UpdatStore}> Withdraw </Button>\r\n                        </Grid>\r\n                        </div>\r\n                </Grid>\r\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactScannarA\");","map":{"version":3,"sources":["C:/Users/754638/Desktop/QR_Code_Scanner/qr-code/src/Component/Dashboard/SModal/Modal/ReactScannarA.js"],"names":["React","useState","QrReader","Button","Axios","Form","Grid","makeStyles","useStyles","theme","rootBtn","margin","spacing","display","ReactScannarA","result","setResult","values","setValues","classes","UpdatStore","e","put","then","console","log","alert","IsScann","data","err","width","height"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACrCC,EAAAA,OAAO,EAAE;AACP,aAAS;AACPC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,GAAd;AADD,KADF;AAGLC,IAAAA,OAAO,EAAE;AAHJ;AAD4B,CAAZ,CAAD,CAA5B;;AAQA,SAASC,aAAT,GAAyB;AAAA;;AACrB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,WAAD,CAApC;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,GAAD,CAApC;AACA,QAAMkB,OAAO,GAAGX,SAAS,EAAzB;;AAEA,QAAMY,UAAU,GAAIC,CAAD,IAAO;AACtBjB,IAAAA,KAAK,CAACkB,GAAN,CAAU,0CAAV,EAAsD;AACpDP,MAAAA,MAAM,EAAEA,MAD4C;AAEpDE,MAAAA,MAAM,EAAEA;AAF4C,KAAtD,EAGGM,IAHH,CAGQ,MAAM;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,KALD,EAKGF,IALH,CAKQ,MAAM;AACZP,MAAAA,SAAS,CAAC,cAAD,CAAT,CADY,CAEZ;AACD,KARD;AASH,GAVD;;AAYE,MAAID,MAAM,KAAK,WAAf,EAA2B,CACzB;AACA;AACD,GAHD,MAGO;AACL;AACAW,IAAAA,KAAK,CAACX,MAAD,CAAL,CAFK,CAGL;AACD;;AAGH,WAASY,OAAT,CAAkBC,IAAlB,EAAwB;AACtB,QAAKb,MAAM,KAAK,WAAhB,EAA6B;AAC3B;AACES,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACH,KAHD,MAGO;AACJC,MAAAA,SAAS,CAACY,IAAD,CAAT;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACF;AACF;;AAED,sBACI;AAAA,4BACI,QAAC,QAAD;AACI,MAAA,KAAK,EAAE,IADX;AAEI,MAAA,OAAO,EAAEc,GAAG,IAAIL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CAFpB;AAGI,MAAA,MAAM,EAAEF,OAHZ;AAII,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB;AAJX;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,MAAM,EAAE;AAAClB,QAAAA,OAAO,EAAE;AAAV;AAAb;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAhDQC,a;UAGWN,S;;;KAHXM,a;AAkDT,eAAeA,aAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React , { useState } from 'react'\r\nimport QrReader from 'react-qr-scanner'\r\nimport Button from '@material-ui/core/Button';\r\nimport Axios from 'axios'\r\nimport { Form } from 'react-bootstrap';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    rootBtn: {\r\n      '& > *': {\r\n        margin: theme.spacing(0.1),\r\n      },display: 'flex'\r\n    },\r\n  }));\r\n  \r\nfunction ReactScannarA() {\r\n    const [result, setResult] = useState('No result')\r\n    const [values, setValues] = useState('1')\r\n    const classes = useStyles();\r\n\r\n    const UpdatStore = (e) => {\r\n        Axios.put('http://localhost:3001/api/updateStoreAdd', {\r\n          result: result,\r\n          values: values,\r\n        }).then(() => {\r\n          console.log('withdraw')\r\n        }).then(() => {\r\n          setResult('Withdraw OK!')\r\n          //console.log(result)\r\n        })\r\n    }\r\n\r\n      if (result === 'No result'){\r\n        //console.log('No result 1')\r\n        //console.log(result)\r\n      } else {\r\n        //setResult(e.target.value)\r\n        alert(result)\r\n        //console.log(result)\r\n      }\r\n    \r\n\r\n    function IsScann (data) {\r\n      if ( result === 'No result') {\r\n        //IsScann == false\r\n          console.log(result)\r\n      } else {\r\n         setResult(data)\r\n         console.log(result)\r\n      }\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <QrReader\r\n                delay={1000}\r\n                onError={err => console.log(err)}\r\n                onScan={IsScann}\r\n                style={{ width: '100%', height: '200px' }}/>\r\n            <div styles={{display: 'flex'}}>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReactScannarA\r\n\r\n\r\n/**\r\n <Grid item={12}>\r\n                    <div className={classes.rootBtn}>\r\n                        <Grid item={4}>\r\n                            <Form > \r\n                                <Form.Group>\r\n                                    <Form.Control type=\"number\" size=\"md\" placeholder=\"Values\" onChange={(e) => setValues(e.target.value)}/>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Grid>\r\n                        <Grid item={4}>\r\n                            <Button  variant=\"contained\" color=\"Primary\" onClick={UpdatStore}> Withdraw </Button>\r\n                        </Grid>\r\n                        </div>\r\n                </Grid>\r\n */"]},"metadata":{},"sourceType":"module"}