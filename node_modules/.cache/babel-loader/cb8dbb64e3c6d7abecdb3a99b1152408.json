{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\754638\\\\Desktop\\\\QR_Code_Scanner\\\\qr-code\\\\src\\\\Component\\\\History\\\\History.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from '@material-ui/core/Grid';\nimport { Form } from 'react-bootstrap';\nconst columns = [// { \n//     id: 'Picture', \n//     label: 'Picture', \n//     minWidth: 170 \n// },\n{\n  id: 'GID',\n  label: 'GID',\n  minWidth: 120,\n  align: 'center'\n}, {\n  id: 'PartCode',\n  label: 'Part Code',\n  minWidth: 170\n}, {\n  id: 'Values_number',\n  label: 'Values',\n  minWidth: 120,\n  align: 'center'\n}, {\n  id: 'status',\n  label: 'Status',\n  minWidth: 150,\n  align: 'center'\n}, {\n  id: 'Date_time',\n  label: 'Date',\n  minWidth: 120,\n  align: 'center'\n}];\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    height: '100%'\n  },\n  container: {\n    maxHeight: 1000\n  },\n  txt: {\n    margin: '20px'\n  },\n  scan: {\n    height: 830\n  }\n});\n\nfunction History() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [q, setQ] = useState(\"\");\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(12);\n  useEffect(() => {\n    fetch('http://localhost:3001/api/history').then(response => response.json()).then(json => setData(json));\n  }, []);\n\n  function search(rows) {\n    return rows.filter(row => row.PartCode.toLowerCase().indexOf(q) > -1);\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n          className: classes.container,\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: classes.txt,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: q,\n                size: \"md\",\n                placeholder: \"Search\",\n                onChange: e => {\n                  setQ(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            stickyHeader: true,\n            \"aria-label\": \"sticky table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  style: {\n                    minWidth: column.minWidth\n                  },\n                  children: column.label\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 33\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: search(data).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  role: \"checkbox\",\n                  tabIndex: -1,\n                  children: columns.map(column => {\n                    const value = row[column.id];\n                    return /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: column.align,\n                      children: column.format && typeof value === 'number' ? column.format(value) : value\n                    }, column.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 37\n                    }, this);\n                  })\n                }, row.code, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 33\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [10, 35, 100],\n          component: \"div\",\n          count: data.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onChangePage: handleChangePage,\n          onChangeRowsPerPage: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_s(History, \"Sm0hBur4pJVfgaYlJ92lxZtd/wU=\", false, function () {\n  return [useStyles];\n});\n\n_c = History;\nexport default History;\n\nvar _c;\n\n$RefreshReg$(_c, \"History\");","map":{"version":3,"sources":["C:/Users/754638/Desktop/QR_Code_Scanner/qr-code/src/Component/History/History.js"],"names":["React","useState","useEffect","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Grid","Form","columns","id","label","minWidth","align","useStyles","root","width","height","container","maxHeight","txt","margin","scan","History","data","setData","q","setQ","classes","page","setPage","rowsPerPage","setRowsPerPage","fetch","then","response","json","search","rows","filter","row","PartCode","toLowerCase","indexOf","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","e","map","column","slice","format","code","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,IAAT,QAAqB,iBAArB;AAEI,MAAMC,OAAO,GAAG,CAChB;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,EAAE,EAAE,KADR;AAEIC,EAAAA,KAAK,EAAE,KAFX;AAGIC,EAAAA,QAAQ,EAAE,GAHd;AAIIC,EAAAA,KAAK,EAAE;AAJX,CANgB,EAYhB;AACIH,EAAAA,EAAE,EAAE,UADR;AAEIC,EAAAA,KAAK,EAAE,WAFX;AAGIC,EAAAA,QAAQ,EAAE;AAHd,CAZgB,EAiBhB;AACIF,EAAAA,EAAE,EAAE,eADR;AAEIC,EAAAA,KAAK,EAAE,QAFX;AAGIC,EAAAA,QAAQ,EAAE,GAHd;AAIIC,EAAAA,KAAK,EAAE;AAJX,CAjBgB,EAuBhB;AACIH,EAAAA,EAAE,EAAE,QADR;AAEIC,EAAAA,KAAK,EAAE,QAFX;AAGIC,EAAAA,QAAQ,EAAE,GAHd;AAIIC,EAAAA,KAAK,EAAE;AAJX,CAvBgB,EA6BhB;AACIH,EAAAA,EAAE,EAAE,WADR;AAEIC,EAAAA,KAAK,EAAE,MAFX;AAGIC,EAAAA,QAAQ,EAAE,GAHd;AAIIC,EAAAA,KAAK,EAAE;AAJX,CA7BgB,CAAhB;AAqCA,MAAMC,SAAS,GAAGhB,UAAU,CAAC;AAC7BiB,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,MAAM,EAAE;AAFJ,GADuB;AAK7BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF,GALkB;AAQ7BC,EAAAA,GAAG,EAAE;AACDC,IAAAA,MAAM,EAAE;AADP,GARwB;AAW7BC,EAAAA,IAAI,EAAE;AACFL,IAAAA,MAAM,EAAE;AADN;AAXuB,CAAD,CAA5B;;AAgBA,SAASM,OAAT,GAAmB;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB7B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC8B,CAAD,EAAIC,IAAJ,IAAY/B,QAAQ,CAAC,EAAD,CAA1B;AACA,QAAMgC,OAAO,GAAGd,SAAS,EAAzB;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBlC,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACmC,WAAD,EAAcC,cAAd,IAAgCpC,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZoC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOE,IAAD,IAAUX,OAAO,CAACW,IAAD,CAFvB;AAGH,GAJQ,EAIP,EAJO,CAAT;;AAMA,WAASC,MAAT,CAAgBC,IAAhB,EAAqB;AACjB,WAAOA,IAAI,CAACC,MAAL,CAAaC,GAAD,IACfA,GAAG,CAACC,QAAJ,CAAaC,WAAb,GAA2BC,OAA3B,CAAmCjB,CAAnC,IAAwC,CAAC,CADtC,CAAP;AAGH;;AAED,QAAMkB,gBAAgB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACzChB,IAAAA,OAAO,CAACgB,OAAD,CAAP;AACH,GAFD;;AAIA,QAAMC,uBAAuB,GAAIF,KAAD,IAAW;AACvCb,IAAAA,cAAc,CAAC,CAACa,KAAK,CAACG,MAAN,CAAaC,KAAf,CAAd;AACAnB,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAHD;;AAKA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEF,OAAO,CAACb,IAA1B;AAAA,gCACI,QAAC,cAAD;AAAgB,UAAA,SAAS,EAAEa,OAAO,CAACV,SAAnC;AAAA,kCACI,QAAC,IAAD;AAAA,mCACI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAEU,OAAO,CAACR,GAA/B;AAAA,qCACI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,IAAI,EAAC,MAAnB;AAA0B,gBAAA,KAAK,EAAEM,CAAjC;AAAoC,gBAAA,IAAI,EAAC,IAAzC;AAA8C,gBAAA,WAAW,EAAC,QAA1D;AAAmE,gBAAA,QAAQ,EAAGwB,CAAD,IAAO;AAACvB,kBAAAA,IAAI,CAACuB,CAAC,CAACF,MAAF,CAASC,KAAV,CAAJ;AAAqB;AAA1G;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI,QAAC,KAAD;AAAO,YAAA,YAAY,MAAnB;AAAoB,0BAAW,cAA/B;AAAA,oCACA,QAAC,SAAD;AAAA,qCACI,QAAC,QAAD;AAAA,0BACCxC,OAAO,CAAC0C,GAAR,CAAaC,MAAD,iBACT,QAAC,SAAD;AAEA,kBAAA,KAAK,EAAEA,MAAM,CAACvC,KAFd;AAGA,kBAAA,KAAK,EAAE;AAAED,oBAAAA,QAAQ,EAAEwC,MAAM,CAACxC;AAAnB,mBAHP;AAAA,4BAKCwC,MAAM,CAACzC;AALR,mBACKyC,MAAM,CAAC1C,EADZ;AAAA;AAAA;AAAA;AAAA,wBADH;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADA,eAcA,QAAC,SAAD;AAAA,wBACK2B,MAAM,CAACb,IAAD,CAAN,CAAa6B,KAAb,CAAmBxB,IAAI,GAAGE,WAA1B,EAAuCF,IAAI,GAAGE,WAAP,GAAqBA,WAA5D,EAAyEoB,GAAzE,CAA8EX,GAAD,IAAS;AACvF,oCACI,QAAC,QAAD;AAAU,kBAAA,KAAK,MAAf;AAAgB,kBAAA,IAAI,EAAC,UAArB;AAAgC,kBAAA,QAAQ,EAAE,CAAC,CAA3C;AAAA,4BACC/B,OAAO,CAAC0C,GAAR,CAAaC,MAAD,IAAY;AACrB,0BAAMH,KAAK,GAAGT,GAAG,CAACY,MAAM,CAAC1C,EAAR,CAAjB;AACA,wCACA,QAAC,SAAD;AAA2B,sBAAA,KAAK,EAAE0C,MAAM,CAACvC,KAAzC;AAAA,gCACKuC,MAAM,CAACE,MAAP,IAAiB,OAAOL,KAAP,KAAiB,QAAlC,GAA6CG,MAAM,CAACE,MAAP,CAAcL,KAAd,CAA7C,GAAoEA;AADzE,uBAAgBG,MAAM,CAAC1C,EAAvB;AAAA;AAAA;AAAA;AAAA,4BADA;AAKH,mBAPA;AADD,mBAAmD8B,GAAG,CAACe,IAAvD;AAAA;AAAA;AAAA;AAAA,wBADJ;AAYC,eAbA;AADL;AAAA;AAAA;AAAA;AAAA,oBAdA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAuCI,QAAC,eAAD;AACI,UAAA,kBAAkB,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,CADxB;AAEI,UAAA,SAAS,EAAC,KAFd;AAGI,UAAA,KAAK,EAAE/B,IAAI,CAACgC,MAHhB;AAII,UAAA,WAAW,EAAEzB,WAJjB;AAKI,UAAA,IAAI,EAAEF,IALV;AAMI,UAAA,YAAY,EAAEe,gBANlB;AAOI,UAAA,mBAAmB,EAAEG;AAPzB;AAAA;AAAA;AAAA;AAAA,gBAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuDH;;GAnFYxB,O;UAGOT,S;;;KAHPS,O;AAqFb,eAAeA,OAAf","sourcesContent":["import React ,{ useState, useEffect }from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Form } from 'react-bootstrap';\r\n\r\n    const columns = [ \r\n    // { \r\n    //     id: 'Picture', \r\n    //     label: 'Picture', \r\n    //     minWidth: 170 \r\n    // },\r\n    { \r\n        id: 'GID', \r\n        label: 'GID', \r\n        minWidth: 120 ,\r\n        align: 'center',\r\n    },\r\n    { \r\n        id: 'PartCode', \r\n        label: 'Part Code', \r\n        minWidth: 170 \r\n    },\r\n    { \r\n        id: 'Values_number', \r\n        label: 'Values', \r\n        minWidth: 120 ,\r\n        align: 'center',\r\n    },\r\n    {\r\n        id: 'status',\r\n        label: 'Status',\r\n        minWidth: 150,\r\n        align: 'center',\r\n    },\r\n    { \r\n        id: 'Date_time', \r\n        label: 'Date', \r\n        minWidth: 120 ,\r\n        align: 'center',\r\n    },\r\n    ];\r\n\r\n    const useStyles = makeStyles({\r\n    root: {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n    container: {\r\n      maxHeight: 1000,\r\n    },\r\n    txt: {\r\n        margin: '20px'\r\n    },\r\n    scan: {\r\n        height: 830\r\n    }\r\n  });\r\n\r\n    function History() {\r\n    const [data, setData] = useState([])\r\n    const [q, setQ] = useState(\"\")\r\n    const classes = useStyles();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(12);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/api/history')\r\n        .then((response) => response.json())\r\n        .then((json) => setData(json))\r\n    },[]);\r\n\r\n    function search(rows){\r\n        return rows.filter((row) => \r\n            row.PartCode.toLowerCase().indexOf(q) > -1 \r\n        )\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Paper className={classes.root}>\r\n                    <TableContainer className={classes.container}>\r\n                        <Form>\r\n                            <Form.Group className={classes.txt} >\r\n                                <Form.Control type=\"text\" value={q} size=\"md\" placeholder=\"Search\" onChange={(e) => {setQ(e.target.value)}} />\r\n                            </Form.Group>\r\n                        </Form>\r\n                        <Table stickyHeader aria-label=\"sticky table\" >\r\n                        <TableHead>\r\n                            <TableRow>\r\n                            {columns.map((column) => (\r\n                                <TableCell\r\n                                key={column.id}\r\n                                align={column.align}\r\n                                style={{ minWidth: column.minWidth }}\r\n                                >\r\n                                {column.label}\r\n                                </TableCell>\r\n                            ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {search(data).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                            return (\r\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                {columns.map((column) => {\r\n                                    const value = row[column.id];\r\n                                    return (\r\n                                    <TableCell key={column.id} align={column.align}>\r\n                                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                    </TableCell>\r\n                                    );\r\n                                })}\r\n                                </TableRow>\r\n                            );\r\n                            })}\r\n                        </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[10, 35, 100]}\r\n                        component=\"div\"\r\n                        count={data.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    />\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default History\r\n"]},"metadata":{},"sourceType":"module"}