{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\754638\\\\Desktop\\\\QR_Code_Scanner\\\\qr-code\\\\src\\\\Component\\\\PageDashboard\\\\ReactWebcamBarcodeScanner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport BarcodeScannerComponent from \"react-webcam-barcode-scanner\";\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  root1: {},\n  root2: {},\n  p: {}\n}));\n\nfunction ReactWebcamBarcodeScanner() {\n  _s();\n\n  const classes = useStyles();\n  const [data, setData] = useState('Not Found');\n  const [add, setAdd] = useState('');\n  const [out, setUot] = useState('');\n\n  const UpdatStore = () => {\n    console.log(data); // to database\n  };\n\n  const OutStore = () => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.root,\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 11,\n        children: \"asdasd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root1,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.root2,\n            children: /*#__PURE__*/_jsxDEV(BarcodeScannerComponent, {\n              width: 500,\n              height: 200,\n              onUpdate: (err, result) => {\n                if (result) setData(result.text);else setData('Not Found');\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.p,\n            children: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.root,\n            variant: \"contained\",\n            color: \"Primary\",\n            onClick: UpdatStore,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.root,\n            variant: \"contained\",\n            color: \"Primary\",\n            onClick: OutStore,\n            children: \"Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ReactWebcamBarcodeScanner, \"bx/9sx8Lx8cO+et2oZ6/XBM/eLo=\", false, function () {\n  return [useStyles];\n});\n\n_c = ReactWebcamBarcodeScanner;\nexport default ReactWebcamBarcodeScanner;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactWebcamBarcodeScanner\");","map":{"version":3,"sources":["C:/Users/754638/Desktop/QR_Code_Scanner/qr-code/src/Component/PageDashboard/ReactWebcamBarcodeScanner.js"],"names":["React","useState","BarcodeScannerComponent","Grid","Button","makeStyles","useStyles","theme","root","root1","root2","p","ReactWebcamBarcodeScanner","classes","data","setData","add","setAdd","out","setUot","UpdatStore","console","log","OutStore","err","result","text"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport BarcodeScannerComponent from \"react-webcam-barcode-scanner\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n \r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \r\n    },  \r\n    root1: {\r\n      \r\n    },\r\n    root2: {\r\n        \r\n    },\r\n    p:{\r\n        \r\n    }\r\n}))\r\n\r\nfunction ReactWebcamBarcodeScanner() {\r\n  const classes = useStyles();\r\n\r\n  const [ data, setData ] = useState('Not Found')\r\n  const [ add, setAdd ] = useState('')\r\n  const [ out, setUot ] = useState('')\r\n \r\n    const UpdatStore = () => {\r\n        console.log(data) // to database\r\n    }\r\n    const OutStore = () => {\r\n        console.log(data)\r\n    }\r\n\r\n  return (\r\n    <Grid container >\r\n      <Grid className={classes.root} item xs={12}>\r\n        <Grid item xs={11} >asdasd</Grid>\r\n        <Grid item xs={1}>\r\n          <div className={classes.root1}>\r\n              <div className={classes.root2}>\r\n                  <BarcodeScannerComponent\r\n                      width={500}\r\n                      height={200}\r\n                      onUpdate={(err, result) => {\r\n                        if (result) setData(result.text)\r\n                      else setData('Not Found')\r\n                    }}\r\n                    />\r\n              </div>\r\n              <p className={classes.p}>{data}</p>\r\n\r\n              <Button className={classes.root} variant=\"contained\" color=\"Primary\" onClick={UpdatStore}>Add</Button>\r\n              <Button className={classes.root} variant=\"contained\" color=\"Primary\" onClick={OutStore}>Out</Button>\r\n\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n \r\nexport default ReactWebcamBarcodeScanner;"]},"metadata":{},"sourceType":"module"}