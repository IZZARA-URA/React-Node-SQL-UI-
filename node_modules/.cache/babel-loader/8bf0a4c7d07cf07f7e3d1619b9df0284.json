{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\754638\\\\Desktop\\\\QR_Code_Scanner\\\\qr-code\\\\src\\\\Component\\\\Dashboard\\\\SModal\\\\Modal\\\\ReactScannarA.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport QrReader from 'react-qr-scanner';\nimport Button from '@material-ui/core/Button';\nimport Axios from 'axios';\nimport { Form } from 'react-bootstrap';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  rootBtn: {\n    '& > *': {\n      margin: theme.spacing(0.1)\n    },\n    display: 'flex'\n  }\n}));\n\nfunction ReactScannarA() {\n  _s();\n\n  const [result, setResult] = useState('No result');\n  const [values, setValues] = useState(500);\n  const [On, setOn] = useState();\n  const classes = useStyles();\n\n  const UpdatStore = e => {\n    Axios.put('http://localhost:3001/api/updateStoreAdd', {\n      result: result,\n      values: values\n    }).then(() => {\n      console.log('withdraw');\n    }).then(() => {\n      setResult('Withdraw OK!'); //console.log(result)\n    });\n  };\n\n  function IsScann() {\n    const Found = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.rootBtn,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: 4,\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"number\",\n                    size: \"md\",\n                    placeholder: \"Values\",\n                    onChange: e => setValues(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: 4,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"Primary\",\n                onClick: UpdatStore,\n                children: \" Withdraw \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n    };\n\n    const Hold = false;\n\n    if (result != null) {\n      const TrueResult = result; //console.log(TrueResult)\n\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"PART CODE : \", Hold ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"A\"\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"B\"\n        }, void 0, false), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }, this);\n    } else {} // if(result === null){\n    //   console.log(result)\n    //   return <p>PART CODE :  No Finding</p>\n    // } else {\n    //   const TrueResult = result\n    //   //console.log(TrueResult)\n    //   return <p>PART CODE : {TrueResult} {Found()} </p>\n    // }\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(QrReader, {\n      delay: 500,\n      onError: err => console.log(err),\n      onScan: data => setResult(data),\n      style: {\n        width: '100%',\n        height: '200px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      styles: {\n        display: 'flex'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", IsScann(result), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ReactScannarA, \"Fh1VRukRPmJ8j0hooNgcZYIYJNQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = ReactScannarA;\nexport default ReactScannarA;\n/**\r\n * \r\n * \r\n * \r\n * \r\n * \r\n * \r\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactScannarA\");","map":{"version":3,"sources":["C:/Users/754638/Desktop/QR_Code_Scanner/qr-code/src/Component/Dashboard/SModal/Modal/ReactScannarA.js"],"names":["React","useState","QrReader","Button","Axios","Form","Grid","makeStyles","useStyles","theme","rootBtn","margin","spacing","display","ReactScannarA","result","setResult","values","setValues","On","setOn","classes","UpdatStore","e","put","then","console","log","IsScann","Found","target","value","Hold","TrueResult","err","data","width","height"],"mappings":"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","sourcesContent":["import React , { useState } from 'react'\r\nimport QrReader from 'react-qr-scanner'\r\nimport Button from '@material-ui/core/Button';\r\nimport Axios from 'axios'\r\nimport { Form } from 'react-bootstrap';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    rootBtn: {\r\n      '& > *': {\r\n        margin: theme.spacing(0.1),\r\n      },display: 'flex'\r\n    },\r\n  }));\r\n  \r\nfunction ReactScannarA() {\r\n    const [result, setResult] = useState('No result')\r\n    const [values, setValues] = useState(500)\r\n    const [On, setOn] = useState()\r\n    const classes = useStyles();\r\n\r\n    const UpdatStore = (e) => {\r\n        Axios.put('http://localhost:3001/api/updateStoreAdd', {\r\n          result: result,\r\n          values: values,\r\n        }).then(() => {\r\n          console.log('withdraw')\r\n        }).then(() => {\r\n          setResult('Withdraw OK!')\r\n          //console.log(result)\r\n        })\r\n    }\r\n\r\n    function IsScann () {\r\n      const Found = () => {\r\n        return (\r\n        <div>\r\n          <Grid item={12}>\r\n            <div className={classes.rootBtn}>\r\n                <Grid item={4}>\r\n                    <Form > \r\n                        <Form.Group>\r\n                            <Form.Control type=\"number\" size=\"md\" placeholder=\"Values\" onChange={(e) => setValues(e.target.value)}/>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Grid>\r\n                <Grid item={4}>\r\n                    <Button  variant=\"contained\" color=\"Primary\" onClick={UpdatStore}> Withdraw </Button>\r\n                </Grid>\r\n            </div>\r\n          </Grid>\r\n        </div>\r\n      )}\r\n      const Hold = false\r\n\r\n      if(result != null ){ \r\n        const TrueResult = result\r\n        //console.log(TrueResult)\r\n        return <p>PART CODE : {Hold?(<>A</>):(<>B</>)} </p>\r\n        \r\n      } else { \r\n        \r\n      }\r\n          // if(result === null){\r\n          //   console.log(result)\r\n          //   return <p>PART CODE :  No Finding</p>\r\n          // } else {\r\n          //   const TrueResult = result\r\n          //   //console.log(TrueResult)\r\n          //   return <p>PART CODE : {TrueResult} {Found()} </p>\r\n          // }\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            <QrReader\r\n                delay={500}\r\n                onError={err => console.log(err)}\r\n                onScan={(data) => setResult(data)}\r\n                style={{ width: '100%', height: '200px' }}/>\r\n            <div styles={{display: 'flex'}}>\r\n                <p> {IsScann(result)} </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReactScannarA\r\n\r\n\r\n/**\r\n * \r\n * \r\n * \r\n * \r\n * \r\n * \r\n */"]},"metadata":{},"sourceType":"module"}