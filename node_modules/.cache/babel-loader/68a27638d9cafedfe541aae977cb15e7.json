{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\754638\\\\Desktop\\\\QR_Code_Scanner\\\\qr-code\\\\src\\\\Component\\\\QrScan.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport QrReader from 'react-qr-scanner';\n\nfunction QrScan() {\n  _s();\n\n  const [result, setResult] = useState('No result');\n\n  const QrResult = () => {\n    const input = setResult(data);\n    return A = input.split(',');\n  };\n\n  const SplitFunction = () => {\n    console.log(\"123\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(QrReader, {\n      delay: 100,\n      onError: err => console.log(err),\n      onScan: QrResult,\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: SplitFunction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QrScan, \"vkAq76JICEguP0I41iSFgHbGFmk=\");\n\n_c = QrScan;\nexport default QrScan;\n\nvar _c;\n\n$RefreshReg$(_c, \"QrScan\");","map":{"version":3,"sources":["C:/Users/754638/Desktop/QR_Code_Scanner/qr-code/src/Component/QrScan.js"],"names":["React","useState","QrReader","QrScan","result","setResult","QrResult","input","data","A","split","SplitFunction","console","log","err","width"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACd,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,WAAD,CAApC;;AAEA,QAAMK,QAAQ,GAAG,MAAM;AACrB,UAAMC,KAAK,GAAGF,SAAS,CAACG,IAAD,CAAvB;AACA,WAAOC,CAAC,GAAGF,KAAK,CAACG,KAAN,CAAY,GAAZ,CAAX;AACD,GAHD;;AAKA,QAAMC,aAAa,GAAG,MAAM;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD,GAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,QAAD;AACI,MAAA,KAAK,EAAE,GADX;AAEI,MAAA,OAAO,EAAEC,GAAG,IAAIF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAFpB;AAGI,MAAA,MAAM,EAAER,QAHZ;AAII,MAAA,KAAK,EAAE;AAAES,QAAAA,KAAK,EAAE;AAAT;AAJX;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAA,gBAAIX;AAAJ;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAA,gBAAIO;AAAJ;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAzBQR,M;;KAAAA,M;AA4BT,eAAeA,MAAf","sourcesContent":["import React , { useState } from 'react'\r\nimport QrReader from 'react-qr-scanner'\r\n\r\nfunction QrScan() {\r\n    const [result, setResult] = useState('No result');\r\n\r\n    const QrResult = () => {\r\n      const input = setResult(data) \r\n      return A = input.split(',')   \r\n    }\r\n    \r\n    const SplitFunction = () => {\r\n      console.log(\"123\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <QrReader\r\n                delay={100}\r\n                onError={err => console.log(err)}\r\n                onScan={QrResult}\r\n                style={{ width: '100%' }}\r\n            />\r\n            <p>{result}</p>\r\n            <p>{SplitFunction}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default QrScan\r\n"]},"metadata":{},"sourceType":"module"}