{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\754638\\\\Desktop\\\\QR_Code_Scanner\\\\qr-code\\\\src\\\\Component\\\\Dashboard\\\\Add\\\\Add.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Form, InputGroup, FormControl, Col } from 'react-bootstrap';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport QRCode from \"qrcode.react\";\nconst useStyles = makeStyles(theme => ({\n  add: {\n    '& > *': {\n      padding: '10px',\n      marginTop: '24px'\n    }\n  },\n  Form: {\n    marginTop: '16px'\n  },\n  A: {\n    marginTop: '80px'\n  }\n}));\n\nfunction Add() {\n  _s();\n\n  const classes = useStyles();\n  const [PartCode, setPartCode] = useState(\"\");\n  const [Brand, setBrand] = useState(\"none\");\n  const [Location_at, setLocation] = useState(null);\n  const [Description, setDescription] = useState(\"none\");\n  const [Values, setValues] = useState(\"1\"); // const [img, setImg] = useState(null)\n  // const [imgData, setImgdata] = useState(null)\n  // const [qrValue, setQrValue] = useState(PartCode);\n\n  const handlerSubmit = e => {\n    if (PartCode == \"\" && Location_at == null) {\n      console.error();\n      return alert(\"Error! => Part Code & Location should be not empty\");\n    } else {\n      axios.post('http://localhost:3001/api/insert', {\n        PartCode: PartCode,\n        Brand: Brand,\n        Location_at: Location_at,\n        Values: Values,\n        Description: Description\n      }).then(() => {\n        alert(\"successfull insert\");\n      }).then(window.location.reload(false));\n    }\n\n    html2canvas(document.querySelector(`#capture`)).then(canvas => {\n      let dataURL = canvas.toDataURL('image/png');\n\n      if (type === 'pdf') {\n        const pdf = new jsPDF({\n          orientation: \"landscape\",\n          unit: \"in\",\n          format: [14, 10]\n        });\n        pdf.addImage(dataURL, 'PNG', .6, .6);\n        pdf.save(`${name}.pdf`);\n      } else if (type === 'png') {\n        var link = document.createElement('a');\n        link.download = `${name}.png`;\n        link.href = dataURL;\n        link.click();\n      }\n    });\n  }; // const onChangePicture = e => {\n  //     if (e.target.files[0]) {\n  //         console.log(\"picture:\", e.target.files)\n  //         setImg(e.target.files[0])\n  //         const reader = new FileReader();\n  //         reader.addEventListener(\"load\", () => {\n  //             setImgdata(reader.result)\n  //         })\n  //         reader.readAsDataURL(e.target.files[0])\n  //     }\n  // }\n\n\n  const handleOnChange = event => {\n    const {\n      value\n    } = event.target;\n    setPartCode(event.target.value.toUpperCase());\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 1,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.A,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              size: \"md\",\n              placeholder: \"Part Code\",\n              onChange: handleOnChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              size: \"md\",\n              placeholder: \"Brand\",\n              onChange: e => setBrand(e.target.value.toUpperCase())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                size: \"md\",\n                placeholder: \"Location\",\n                onChange: e => setLocation(e.target.value.toUpperCase())\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                size: \"md\",\n                placeholder: \"Values\",\n                onChange: e => setValues(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n              children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              as: \"textarea\",\n              size: \"md\",\n              \"aria-label\": \"With textarea\",\n              onChange: e => setDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: `capture`,\n            children: /*#__PURE__*/_jsxDEV(QRCode, {\n              id: \"qr-gen\",\n              value: PartCode,\n              size: 290,\n              level: \"H\",\n              includeMargin: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: classes.add,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              fullWidth: true,\n              color: \"Primary\",\n              onClick: handlerSubmit(\"pdf\", \"my-content\"),\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Add, \"KgMH1JqnPULBaRibeWLimBh29gM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Add;\nexport default Add; // import React, { useState } from 'react'\n// import axios from 'axios'\n// import { Form, InputGroup, FormControl, Col } from 'react-bootstrap';\n// import Button from '@material-ui/core/Button';\n// import Grid from '@material-ui/core/Grid';\n// import { makeStyles } from '@material-ui/core/styles';\n// import QRCode from \"qrcode.react\";\n// const useStyles = makeStyles((theme) => ({\n//     add: {\n//         '& > *': {\n//             padding: '10px',\n//             marginTop: '24px'},\n//     },\n//     Form: {\n//         marginTop: '16px'\n//     },\n//     A :{\n//         marginTop: '80px'\n//     }\n// }))\n// function Add() {\n//     const classes = useStyles();\n//     const [PartCode, setPartCode] = useState(\"\")\n//     const [Brand, setBrand] = useState(\"none\")\n//     const [Location_at, setLocation] = useState(null)\n//     const [Description, setDescription] = useState(\"none\")\n//     const [Values, setValues] = useState(\"1\")\n//     // const [img, setImg] = useState(null)\n//     // const [imgData, setImgdata] = useState(null)\n//     // const [qrValue, setQrValue] = useState(PartCode);\n//     const handlerSubmit = (e) => {\n//         if(PartCode == \"\" && Location_at == null) {\n//             console.error();\n//             return alert(\"Error! => Part Code & Location should be not empty\")\n//         } else {\n//             axios.post('http://localhost:3001/api/insert', {\n//             PartCode : PartCode,\n//             Brand : Brand,\n//             Location_at : Location_at,\n//             Values : Values,\n//             Description : Description,\n//         }).then(() => {\n//             alert(\"successfull insert\")\n//         }).then(window.location.reload(false))\n//         }\n//         const canvas = document.getElementById(\"qr-gen\");\n//         const pngUrl = canvas\n//         .toDataURL(\"image/png\")\n//         .replace(\"image/png\", \"image/octet-stream\");\n//         let downloadLink = document.createElement(\"a\");\n//         downloadLink.href = pngUrl;\n//         downloadLink.download = `${PartCode}.png`;\n//         document.body.appendChild(downloadLink);\n//         downloadLink.click();\n//         document.body.removeChild(downloadLink);\n//     }\n//     // const onChangePicture = e => {\n//     //     if (e.target.files[0]) {\n//     //         console.log(\"picture:\", e.target.files)\n//     //         setImg(e.target.files[0])\n//     //         const reader = new FileReader();\n//     //         reader.addEventListener(\"load\", () => {\n//     //             setImgdata(reader.result)\n//     //         })\n//     //         reader.readAsDataURL(e.target.files[0])\n//     //     }\n//     // }\n//     const handleOnChange = event => {\n//         const { value } = event.target;\n//         setPartCode(event.target.value.toUpperCase())\n//       };\n//     return (\n//         <Grid container spacing={1}>\n//             <Grid item xs={12} >\n//                 <div className={classes.A}>\n//                     <Form>\n//                         <Form.Group >\n//                             <Form.Control type=\"text\" size=\"md\" placeholder=\"Part Code\" onChange={handleOnChange} />\n//                         </Form.Group>\n//                         <Form.Group >\n//                             <Form.Control type=\"text\" size=\"md\" placeholder=\"Brand\" onChange={(e) => setBrand(e.target.value.toUpperCase())}/>\n//                         </Form.Group>\n//                         <Form.Row>\n//                             <Form.Group as={Col}>\n//                                     <Form.Control type=\"text\" size=\"md\" placeholder=\"Location\" onChange={(e) => setLocation(e.target.value.toUpperCase())}/>\n//                             </Form.Group>\n//                             <Form.Group as={Col}>\n//                                     <Form.Control type=\"number\" size=\"md\" placeholder=\"Values\" onChange={(e) => setValues(e.target.value)}/>\n//                             </Form.Group>\n//                         </Form.Row>\n//                         {/*\n//                         <Form.Group >\n//                             <Form.File id=\"img\" custom label=\"Image\" onChange={onChangePicture}/>\n//                         </Form.Group>\n//                         */}\n//                         <InputGroup>\n//                             <InputGroup.Prepend>\n//                                 <InputGroup.Text>Description</InputGroup.Text>\n//                             </InputGroup.Prepend>\n//                             <FormControl as=\"textarea\" size=\"md\" aria-label=\"With textarea\" onChange={(e) => setDescription(e.target.value)}/>\n//                         </InputGroup>\n//                         <div>\n//                             <QRCode\n//                                 id=\"qr-gen\"\n//                                 value={PartCode}\n//                                 size={290}\n//                                 level={\"H\"}\n//                                 includeMargin={true}\n//                             />\n//                         </div>\n//                         <Form.Group className={classes.add}>\n//                             <Button variant=\"contained\" fullWidth color=\"Primary\" onClick={handlerSubmit}>\n//                                 Register\n//                             </Button>\n//                         </Form.Group>\n//                     </Form>\n//                 </div>\n//             </Grid>\n//         </Grid>\n//     )\n// }\n// export default Add\n\nvar _c;\n\n$RefreshReg$(_c, \"Add\");","map":{"version":3,"sources":["C:/Users/754638/Desktop/QR_Code_Scanner/qr-code/src/Component/Dashboard/Add/Add.js"],"names":["React","useState","axios","Form","InputGroup","FormControl","Col","Button","Grid","makeStyles","QRCode","useStyles","theme","add","padding","marginTop","A","Add","classes","PartCode","setPartCode","Brand","setBrand","Location_at","setLocation","Description","setDescription","Values","setValues","handlerSubmit","e","console","error","alert","post","then","window","location","reload","html2canvas","document","querySelector","canvas","dataURL","toDataURL","type","pdf","jsPDF","orientation","unit","format","addImage","save","name","link","createElement","download","href","click","handleOnChange","event","value","target","toUpperCase"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Form, InputGroup, FormControl, Col } from 'react-bootstrap';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport QRCode from \"qrcode.react\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    add: {\r\n        '& > *': {\r\n            padding: '10px',\r\n            marginTop: '24px'},\r\n    },\r\n    Form: {\r\n        marginTop: '16px'\r\n    },\r\n    A :{\r\n        marginTop: '80px'\r\n    }\r\n}))\r\n\r\nfunction Add() {\r\n    const classes = useStyles();\r\n\r\n    const [PartCode, setPartCode] = useState(\"\")\r\n    const [Brand, setBrand] = useState(\"none\")\r\n    const [Location_at, setLocation] = useState(null)\r\n    const [Description, setDescription] = useState(\"none\")\r\n    const [Values, setValues] = useState(\"1\")\r\n    // const [img, setImg] = useState(null)\r\n    // const [imgData, setImgdata] = useState(null)\r\n    // const [qrValue, setQrValue] = useState(PartCode);\r\n\r\n    \r\n\r\n    const handlerSubmit = (e) => {\r\n        if(PartCode == \"\" && Location_at == null) {\r\n            console.error();\r\n            return alert(\"Error! => Part Code & Location should be not empty\")\r\n        } else {\r\n            axios.post('http://localhost:3001/api/insert', {\r\n            PartCode : PartCode,\r\n            Brand : Brand,\r\n            Location_at : Location_at,\r\n            Values : Values,\r\n            Description : Description,\r\n        }).then(() => {\r\n            alert(\"successfull insert\")\r\n        }).then(window.location.reload(false))\r\n        }\r\n\r\n        \r\n    \r\n            html2canvas(document.querySelector(`#capture`)).then(canvas => {\r\n              let dataURL = canvas.toDataURL('image/png');\r\n        \r\n              if (type === 'pdf') {\r\n                const pdf = new jsPDF({\r\n                  orientation: \"landscape\",\r\n                  unit: \"in\",\r\n                  format: [14, 10]\r\n                });\r\n        \r\n                pdf.addImage(dataURL, 'PNG', .6, .6);\r\n                pdf.save(`${name}.pdf`);\r\n        \r\n              } else if (type === 'png') {\r\n                var link = document.createElement('a');\r\n                link.download = `${name}.png`;\r\n                link.href = dataURL;\r\n                link.click();\r\n              }\r\n            });\r\n         \r\n    }\r\n\r\n    // const onChangePicture = e => {\r\n    //     if (e.target.files[0]) {\r\n    //         console.log(\"picture:\", e.target.files)\r\n    //         setImg(e.target.files[0])\r\n    //         const reader = new FileReader();\r\n    //         reader.addEventListener(\"load\", () => {\r\n    //             setImgdata(reader.result)\r\n    //         })\r\n    //         reader.readAsDataURL(e.target.files[0])\r\n    //     }\r\n    // }\r\n\r\n    const handleOnChange = event => {\r\n        const { value } = event.target;\r\n        setPartCode(event.target.value.toUpperCase())\r\n      };\r\n\r\n    return (\r\n        <Grid container spacing={1}>\r\n            <Grid item xs={12} >\r\n                <div className={classes.A}>\r\n                    <Form>\r\n                        <Form.Group >\r\n                            <Form.Control type=\"text\" size=\"md\" placeholder=\"Part Code\" onChange={handleOnChange} />\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Control type=\"text\" size=\"md\" placeholder=\"Brand\" onChange={(e) => setBrand(e.target.value.toUpperCase())}/>\r\n                        </Form.Group>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col}>\r\n                                    <Form.Control type=\"text\" size=\"md\" placeholder=\"Location\" onChange={(e) => setLocation(e.target.value.toUpperCase())}/>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col}>\r\n                                    <Form.Control type=\"number\" size=\"md\" placeholder=\"Values\" onChange={(e) => setValues(e.target.value)}/>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        {/*\r\n                        <Form.Group >\r\n                            <Form.File id=\"img\" custom label=\"Image\" onChange={onChangePicture}/>\r\n                        </Form.Group>\r\n                        */}\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>Description</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl as=\"textarea\" size=\"md\" aria-label=\"With textarea\" onChange={(e) => setDescription(e.target.value)}/>\r\n                        </InputGroup>\r\n\r\n                        <div id ={`capture`}>\r\n                            <QRCode\r\n                                id=\"qr-gen\"\r\n                                value={PartCode}\r\n                                size={290}\r\n                                level={\"H\"}\r\n                                includeMargin={true}\r\n\r\n                            />\r\n                        </div>\r\n\r\n                        <Form.Group className={classes.add}>\r\n                            <Button variant=\"contained\" fullWidth color=\"Primary\" onClick={handlerSubmit(\"pdf\",\"my-content\")}>\r\n                                Register\r\n                            </Button>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Add\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react'\r\n// import axios from 'axios'\r\n// import { Form, InputGroup, FormControl, Col } from 'react-bootstrap';\r\n// import Button from '@material-ui/core/Button';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n\r\n// import QRCode from \"qrcode.react\";\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     add: {\r\n//         '& > *': {\r\n//             padding: '10px',\r\n//             marginTop: '24px'},\r\n//     },\r\n//     Form: {\r\n//         marginTop: '16px'\r\n//     },\r\n//     A :{\r\n//         marginTop: '80px'\r\n//     }\r\n// }))\r\n\r\n// function Add() {\r\n//     const classes = useStyles();\r\n\r\n//     const [PartCode, setPartCode] = useState(\"\")\r\n//     const [Brand, setBrand] = useState(\"none\")\r\n//     const [Location_at, setLocation] = useState(null)\r\n//     const [Description, setDescription] = useState(\"none\")\r\n//     const [Values, setValues] = useState(\"1\")\r\n//     // const [img, setImg] = useState(null)\r\n//     // const [imgData, setImgdata] = useState(null)\r\n//     // const [qrValue, setQrValue] = useState(PartCode);\r\n\r\n    \r\n\r\n//     const handlerSubmit = (e) => {\r\n//         if(PartCode == \"\" && Location_at == null) {\r\n//             console.error();\r\n//             return alert(\"Error! => Part Code & Location should be not empty\")\r\n//         } else {\r\n//             axios.post('http://localhost:3001/api/insert', {\r\n//             PartCode : PartCode,\r\n//             Brand : Brand,\r\n//             Location_at : Location_at,\r\n//             Values : Values,\r\n//             Description : Description,\r\n//         }).then(() => {\r\n//             alert(\"successfull insert\")\r\n//         }).then(window.location.reload(false))\r\n//         }\r\n\r\n//         const canvas = document.getElementById(\"qr-gen\");\r\n//         const pngUrl = canvas\r\n//         .toDataURL(\"image/png\")\r\n//         .replace(\"image/png\", \"image/octet-stream\");\r\n//         let downloadLink = document.createElement(\"a\");\r\n//         downloadLink.href = pngUrl;\r\n//         downloadLink.download = `${PartCode}.png`;\r\n//         document.body.appendChild(downloadLink);\r\n//         downloadLink.click();\r\n//         document.body.removeChild(downloadLink);\r\n//     }\r\n\r\n//     // const onChangePicture = e => {\r\n//     //     if (e.target.files[0]) {\r\n//     //         console.log(\"picture:\", e.target.files)\r\n//     //         setImg(e.target.files[0])\r\n//     //         const reader = new FileReader();\r\n//     //         reader.addEventListener(\"load\", () => {\r\n//     //             setImgdata(reader.result)\r\n//     //         })\r\n//     //         reader.readAsDataURL(e.target.files[0])\r\n//     //     }\r\n//     // }\r\n\r\n//     const handleOnChange = event => {\r\n//         const { value } = event.target;\r\n//         setPartCode(event.target.value.toUpperCase())\r\n//       };\r\n\r\n//     return (\r\n//         <Grid container spacing={1}>\r\n//             <Grid item xs={12} >\r\n//                 <div className={classes.A}>\r\n//                     <Form>\r\n//                         <Form.Group >\r\n//                             <Form.Control type=\"text\" size=\"md\" placeholder=\"Part Code\" onChange={handleOnChange} />\r\n//                         </Form.Group>\r\n//                         <Form.Group >\r\n//                             <Form.Control type=\"text\" size=\"md\" placeholder=\"Brand\" onChange={(e) => setBrand(e.target.value.toUpperCase())}/>\r\n//                         </Form.Group>\r\n//                         <Form.Row>\r\n//                             <Form.Group as={Col}>\r\n//                                     <Form.Control type=\"text\" size=\"md\" placeholder=\"Location\" onChange={(e) => setLocation(e.target.value.toUpperCase())}/>\r\n//                             </Form.Group>\r\n//                             <Form.Group as={Col}>\r\n//                                     <Form.Control type=\"number\" size=\"md\" placeholder=\"Values\" onChange={(e) => setValues(e.target.value)}/>\r\n//                             </Form.Group>\r\n//                         </Form.Row>\r\n//                         {/*\r\n//                         <Form.Group >\r\n//                             <Form.File id=\"img\" custom label=\"Image\" onChange={onChangePicture}/>\r\n//                         </Form.Group>\r\n//                         */}\r\n//                         <InputGroup>\r\n//                             <InputGroup.Prepend>\r\n//                                 <InputGroup.Text>Description</InputGroup.Text>\r\n//                             </InputGroup.Prepend>\r\n//                             <FormControl as=\"textarea\" size=\"md\" aria-label=\"With textarea\" onChange={(e) => setDescription(e.target.value)}/>\r\n//                         </InputGroup>\r\n\r\n//                         <div>\r\n//                             <QRCode\r\n//                                 id=\"qr-gen\"\r\n//                                 value={PartCode}\r\n//                                 size={290}\r\n//                                 level={\"H\"}\r\n//                                 includeMargin={true}\r\n\r\n//                             />\r\n//                         </div>\r\n\r\n//                         <Form.Group className={classes.add}>\r\n//                             <Button variant=\"contained\" fullWidth color=\"Primary\" onClick={handlerSubmit}>\r\n//                                 Register\r\n//                             </Button>\r\n//                         </Form.Group>\r\n//                     </Form>\r\n//                 </div>\r\n//             </Grid>\r\n//         </Grid>\r\n//     )\r\n// }\r\n\r\n// export default Add\r\n"]},"metadata":{},"sourceType":"module"}