{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\754638\\\\Desktop\\\\QR_Code_Scanner\\\\qr-code\\\\src\\\\Component\\\\Modal\\\\Modal.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  rootBtn: {\n    '& > *': {\n      margin: theme.spacing(0.1)\n    },\n    display: 'flex'\n  }\n}));\nexport default function SModal() {\n  _s();\n\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpenA = () => {\n    setOpen(true);\n  };\n\n  const handleCloseA = () => {\n    setOpen(false);\n  };\n\n  const handleOpenB = () => {\n    setOpen(true);\n  };\n\n  const handleCloseB = () => {\n    setOpen(false);\n  };\n\n  const body = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"simple-modal-title\",\n      children: \"Text in a modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"simple-modal-description\",\n      children: \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.rootBtn,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: handleOpenA,\n      children: \"Withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"Primary\",\n      onClick: handleOpenB,\n      children: \"To Store\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleCloseA,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleCloseB,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SModal, \"TsAExMDA6yuxA58uE+YzDgG8Jdg=\", false, function () {\n  return [useStyles];\n});\n\n_c = SModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SModal\");","map":{"version":3,"sources":["C:/Users/754638/Desktop/QR_Code_Scanner/qr-code/src/Component/Modal/Modal.js"],"names":["React","makeStyles","Modal","Button","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","rootBtn","margin","display","SModal","classes","open","setOpen","useState","handleOpenA","handleCloseA","handleOpenB","handleCloseB","body"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAGA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,UADL;AAELC,IAAAA,KAAK,EAAE,GAFF;AAGLC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBL,KAHrC;AAILM,IAAAA,MAAM,EAAE,gBAJH;AAKLC,IAAAA,SAAS,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd,CALN;AAMLC,IAAAA,OAAO,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AANJ,GADgC;AASvCC,EAAAA,OAAO,EAAE;AACP,aAAS;AACPC,MAAAA,MAAM,EAAEb,KAAK,CAACW,OAAN,CAAc,GAAd;AADD,KADF;AAGLG,IAAAA,OAAO,EAAE;AAHJ;AAT8B,CAAZ,CAAD,CAA5B;AAgBA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAMC,OAAO,GAAGjB,SAAS,EAAzB,CAD+B,CAE/B;;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBvB,KAAK,CAACwB,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMG,YAAY,GAAG,MAAM;AACzBH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMI,WAAW,GAAG,MAAM;AACxBJ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMK,YAAY,GAAG,MAAM;AACzBL,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMM,IAAI,gBACR;AAAM,IAAA,SAAS,EAAER,OAAO,CAACf,KAAzB;AAAA,4BACE;AAAI,MAAA,EAAE,EAAC,oBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAG,MAAA,EAAE,EAAC,0BAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AASA,sBACE;AAAK,IAAA,SAAS,EAAEe,OAAO,CAACJ,OAAxB;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,SAAS,MAAjB;AAAkB,MAAA,OAAO,EAAC,WAA1B;AAAsC,MAAA,KAAK,EAAC,WAA5C;AAAwD,MAAA,OAAO,EAAEQ,WAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,MAAD;AAAS,MAAA,SAAS,MAAlB;AAAmB,MAAA,OAAO,EAAC,WAA3B;AAAuC,MAAA,KAAK,EAAC,SAA7C;AAAuD,MAAA,OAAO,EAAEE,WAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOE,QAAC,KAAD;AACE,MAAA,IAAI,EAAEL,IADR;AAEE,MAAA,OAAO,EAAEI,YAFX;AAGE,yBAAgB,oBAHlB;AAIE,0BAAiB,0BAJnB;AAAA,gBAMGG;AANH;AAAA;AAAA;AAAA;AAAA,YAPF,eAgBE,QAAC,KAAD;AACE,MAAA,IAAI,EAAEP,IADR;AAEE,MAAA,OAAO,EAAEM,YAFX;AAGE,yBAAgB,oBAHlB;AAIE,0BAAiB,0BAJnB;AAAA,gBAMGC;AANH;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAzDuBT,M;UACNhB,S;;;KADMgB,M","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  rootBtn: {\r\n    '& > *': {\r\n      margin: theme.spacing(0.1),\r\n    },display: 'flex'\r\n  },\r\n}));\r\n\r\nexport default function SModal() {\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpenA = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCloseA = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpenB = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCloseB = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <div  className={classes.paper}>\r\n      <h2 id=\"simple-modal-title\">Text in a modal</h2>\r\n      <p id=\"simple-modal-description\">\r\n        Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n      </p>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.rootBtn}>\r\n        <Button fullWidth variant=\"contained\" color=\"secondary\" onClick={handleOpenA}> \r\n            Withdraw \r\n        </Button>     \r\n        <Button  fullWidth variant=\"contained\" color=\"Primary\" onClick={handleOpenB}> \r\n            To Store  \r\n        </Button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleCloseA}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n\r\n      <Modal\r\n        open={open}\r\n        onClose={handleCloseB}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}